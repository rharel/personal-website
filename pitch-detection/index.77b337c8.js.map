{"mappings":"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","sources":["node_modules/@swc/helpers/src/_async_to_generator.js","node_modules/regenerator-runtime/runtime.js","projects/pitch-detection/pitch_detection.ts","projects/pitch-detection/demo.ts"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","const PITCH_CLASSES = [\r\n  \"A\",\r\n  \"A#\",\r\n  \"B\",\r\n  \"C\",\r\n  \"C#\",\r\n  \"D\",\r\n  \"D#\",\r\n  \"E\",\r\n  \"F\",\r\n  \"F#\",\r\n  \"G\",\r\n  \"G#\",\r\n] as const;\r\n\r\nexport async function detect_from_device(\r\n  threshold: number,\r\n  history_buffer_size: number,\r\n  callback: (frequency: number, note: string) => void\r\n) {\r\n  // We want to be able to distinguish between the closest two notes in our desired range.\r\n  const a4 = 440;\r\n  const c1 = 32.7;\r\n  const c1_sharp = 34.65;\r\n  const c7 = 2093;\r\n  const desired_frequency_resolution = c1_sharp - c1;\r\n\r\n  // Determine how many frequency bins we need to achieve the desired resolution between\r\n  // consecutive bins. The bins denote frequencies from 0 to 1/2 of the sample rate. [1].\r\n  //\r\n  // 1. https://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode/getByteFrequencyData\r\n  const context = new AudioContext();\r\n  const bin_max_frequency = context.sampleRate / 2;\r\n  const desired_frequency_bin_count =\r\n    bin_max_frequency / desired_frequency_resolution;\r\n\r\n  // Bin count must be a power of two, so find the nearest one that satisfies our requirement.\r\n  // Must be between 32 and 32768. [2]\r\n  //\r\n  // 2. https://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode/getByteFrequencyData\r\n  const frequency_bin_count = (() => {\r\n    let nearest_power_of_two = 32;\r\n    while (\r\n      nearest_power_of_two < desired_frequency_bin_count &&\r\n      nearest_power_of_two <= 32768\r\n    ) {\r\n      nearest_power_of_two *= 2;\r\n    }\r\n    return nearest_power_of_two;\r\n  })();\r\n\r\n  // The FFT window size is double the frequency bin count. [3]\r\n  //\r\n  // 3. https://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode/fftSize\r\n  const fft_window_size = frequency_bin_count * 2;\r\n\r\n  const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n  const source_node = context.createMediaStreamSource(stream);\r\n  const analyser_node = context.createAnalyser();\r\n  analyser_node.fftSize = fft_window_size;\r\n  source_node.connect(analyser_node);\r\n\r\n  // Determine the range of bins we are interested in based on the detection frequency range.\r\n  const frequency_resolution = bin_max_frequency / frequency_bin_count;\r\n  const detection_bin_index_min = Math.floor(c1 / frequency_resolution);\r\n  const detection_bin_index_max = Math.ceil(c7 / frequency_resolution);\r\n\r\n  const frequency_bin_intensities = new Uint8Array(frequency_bin_count);\r\n  const detected_note_history: string[] = [];\r\n  const detected_note_counts: { [index: string]: number } = {};\r\n\r\n  function process_samples() {\r\n    requestAnimationFrame(process_samples);\r\n\r\n    analyser_node.getByteFrequencyData(frequency_bin_intensities);\r\n\r\n    let max_intensity = 0;\r\n    let max_intensity_bin_index = 0;\r\n    for (let i = detection_bin_index_min; i < detection_bin_index_max; i += 1) {\r\n      if (frequency_bin_intensities[i] > max_intensity) {\r\n        max_intensity = frequency_bin_intensities[i];\r\n        max_intensity_bin_index = i;\r\n      }\r\n    }\r\n\r\n    if (max_intensity < threshold) {\r\n      return;\r\n    }\r\n\r\n    const detected_frequency =\r\n      (max_intensity_bin_index + 0.5) * frequency_resolution;\r\n\r\n    const detected_note_index = Math.round(\r\n      Math.log2(detected_frequency / a4) * 12\r\n    );\r\n\r\n    const detected_note_index_relative_to_c4 = detected_note_index + 9;\r\n\r\n    const detected_octave =\r\n      4 + Math.floor(detected_note_index_relative_to_c4 / 12);\r\n\r\n    const detected_note_index_normalized =\r\n      detected_note_index % 12 < 0\r\n        ? 12 + (detected_note_index % 12)\r\n        : detected_note_index % 12;\r\n\r\n    const detected_pitch = PITCH_CLASSES[detected_note_index_normalized];\r\n    const detected_note = detected_pitch + detected_octave.toString();\r\n\r\n    if (detected_note_history.length >= history_buffer_size) {\r\n      const popped_note = detected_note_history.splice(0, 1)[0];\r\n      detected_note_counts[popped_note] -= 1;\r\n    }\r\n\r\n    detected_note_history.push(detected_note);\r\n    if (!(detected_note in detected_note_counts)) {\r\n      detected_note_counts[detected_note] = 0;\r\n    }\r\n    detected_note_counts[detected_note] += 1;\r\n\r\n    let dominant_note = \"\";\r\n    for (const note in detected_note_counts) {\r\n      if (\r\n        dominant_note === \"\" ||\r\n        detected_note_counts[note] > detected_note_counts[dominant_note]\r\n      ) {\r\n        dominant_note = note;\r\n      }\r\n    }\r\n    if (dominant_note !== \"\") {\r\n      callback(detected_frequency, dominant_note);\r\n    }\r\n  }\r\n  requestAnimationFrame(process_samples);\r\n}\r\n","import { detect_from_device } from \"./pitch_detection\";\r\n\r\nfunction setup() {\r\n  const detected_frequency = document.getElementById(\"demo-detected-frequency\");\r\n  const detected_note = document.getElementById(\"demo-detected-note\");\r\n\r\n  if (detected_frequency === null || detected_note === null) {\r\n    throw new Error(\"missing demo element\");\r\n  }\r\n\r\n  detect_from_device(125, 12, (frequency, note) => {\r\n    detected_frequency.textContent = `${Math.round(frequency)}Hz`;\r\n    detected_note.textContent = note;\r\n  });\r\n}\r\nwindow.addEventListener(\"DOMContentLoaded\", setup);\r\n"],"names":["$dfa183d8cc942563$var$asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","$dfa183d8cc942563$export$2e2bcd8739ae039","fn","self","this","args","arguments","apply","err","undefined","$21b983287c82ebd3$var$runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","err1","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","GenStateSuspendedYield","makeInvokeMethod","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","result","value1","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","next1","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","object","key1","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","$21b983287c82ebd3$exports","regeneratorRuntime","accidentalStrictMode","globalThis","Function","$7be8486928707c95$var$PITCH_CLASSES","_detect_from_device","$parcel$interopDefault","_callee","threshold","history_buffer_size","callback","a4","c1","c7","desired_frequency_resolution","bin_max_frequency","desired_frequency_bin_count","frequency_bin_count","fft_window_size","stream","source_node","analyser_node","frequency_resolution","detection_bin_index_min","detection_bin_index_max","frequency_bin_intensities","detected_note_history","detected_note_counts","process_samples","requestAnimationFrame","getByteFrequencyData","max_intensity","max_intensity_bin_index","detected_frequency","detected_note_index","Math","round","log2","detected_note_index_relative_to_c4","detected_octave","floor","detected_note","toString","popped_note","splice","dominant_note","note","AudioContext","sampleRate","nearest_power_of_two","navigator","mediaDevices","getUserMedia","audio","_ctx","createMediaStreamSource","createAnalyser","fftSize","connect","ceil","Uint8Array","window","addEventListener","document","getElementById","$7be8486928707c95$export$482f5189a7f4c24c","frequency","textContent","concat"],"version":3,"file":"index.77b337c8.js.map"}