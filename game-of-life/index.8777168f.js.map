{"mappings":"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","sources":["node_modules/@swc/helpers/src/_create_class.js","projects/game-of-life/game_of_life.ts","node_modules/@swc/helpers/src/_class_call_check.js","projects/game-of-life/demo.ts","node_modules/@swc/helpers/src/_type_of.js"],"sourcesContent":["function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n","export type CellCoords = { x: number; y: number };\r\n\r\nexport class WorldState {\r\n  constructor(readonly width: number, readonly height: number) {\r\n    this.cells = new Uint8Array(width * height);\r\n  }\r\n\r\n  cell_index(x: number, y: number): number {\r\n    return x + y * this.width;\r\n  }\r\n\r\n  get(x: number, y: number): boolean {\r\n    return (\r\n      0 <= x &&\r\n      x < this.width &&\r\n      0 <= y &&\r\n      y < this.height &&\r\n      this.cells[this.cell_index(x, y)] !== 0\r\n    );\r\n  }\r\n\r\n  set(x: number, y: number, alive: boolean) {\r\n    this.cells[this.cell_index(x, y)] = +alive;\r\n  }\r\n\r\n  private readonly cells: Uint8Array;\r\n}\r\n\r\nexport function advance(\r\n  current_state: WorldState,\r\n  future_state: WorldState\r\n): CellCoords[] {\r\n  if (\r\n    current_state.width !== future_state.width ||\r\n    current_state.height !== future_state.height\r\n  ) {\r\n    throw new Error(\"world dimension mismatch\");\r\n  }\r\n  const change_coords: CellCoords[] = [];\r\n  for (let x = 0; x < current_state.width; x += 1) {\r\n    for (let y = 0; y < current_state.height; y += 1) {\r\n      const nr_living_neighbors =\r\n        +current_state.get(x - 1, y - 1) +\r\n        +current_state.get(x - 1, y) +\r\n        +current_state.get(x - 1, y + 1) +\r\n        +current_state.get(x, y - 1) +\r\n        +current_state.get(x, y + 1) +\r\n        +current_state.get(x + 1, y - 1) +\r\n        +current_state.get(x + 1, y) +\r\n        +current_state.get(x + 1, y + 1);\r\n      future_state.set(\r\n        x,\r\n        y,\r\n        current_state.get(x, y)\r\n          ? nr_living_neighbors === 2 || nr_living_neighbors === 3\r\n          : nr_living_neighbors === 3\r\n      );\r\n      if (future_state.get(x, y) !== current_state.get(x, y)) {\r\n        change_coords.push({ x, y });\r\n      }\r\n    }\r\n  }\r\n  return change_coords;\r\n}\r\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import { advance, CellCoords, WorldState } from \"./game_of_life\";\r\n\r\nfunction draw_world_state(\r\n  context: CanvasRenderingContext2D,\r\n  world_state: WorldState,\r\n  change_coords?: CellCoords[]\r\n) {\r\n  const cell_size = context.canvas.width / world_state.width;\r\n\r\n  if (change_coords !== undefined) {\r\n    for (const { x, y } of change_coords) {\r\n      let rect_offset;\r\n      let rect_size;\r\n      if (world_state.get(x, y)) {\r\n        rect_offset = 0;\r\n        rect_size = cell_size;\r\n      } else {\r\n        rect_offset = -1;\r\n        rect_size = cell_size + 2;\r\n      }\r\n      context.fillStyle = world_state.get(x, y) ? \"black\" : \"white\";\r\n      context.fillRect(\r\n        x * cell_size + rect_offset,\r\n        y * cell_size + rect_offset,\r\n        rect_size,\r\n        rect_size\r\n      );\r\n    }\r\n  } else {\r\n    context.fillStyle = \"white\";\r\n    context.fillRect(0, 0, context.canvas.width, context.canvas.height);\r\n\r\n    context.fillStyle = \"black\";\r\n    for (let x = 0; x < world_state.width; x += 1) {\r\n      for (let y = 0; y < world_state.height; y += 1) {\r\n        if (world_state.get(x, y)) {\r\n          context.fillRect(x * cell_size, y * cell_size, cell_size, cell_size);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction animate(\r\n  context: CanvasRenderingContext2D,\r\n  initial_state: WorldState,\r\n  fps: number\r\n) {\r\n  let current_state = initial_state;\r\n  let future_state = new WorldState(current_state.width, current_state.height);\r\n  draw_world_state(context, current_state);\r\n\r\n  let paused = false;\r\n\r\n  function draw_frame() {\r\n    const change_coords = advance(current_state, future_state);\r\n    draw_world_state(context, future_state, change_coords);\r\n\r\n    const buffer = current_state;\r\n    current_state = future_state;\r\n    future_state = buffer;\r\n\r\n    if (!paused) {\r\n      setTimeout(() => {\r\n        requestAnimationFrame(draw_frame);\r\n      }, 1000 / fps);\r\n    }\r\n  }\r\n\r\n  setTimeout(() => {\r\n    requestAnimationFrame(draw_frame);\r\n  }, 1000 / fps);\r\n\r\n  function toggle_pause() {\r\n    paused = !paused;\r\n    if (!paused) {\r\n      setTimeout(() => {\r\n        requestAnimationFrame(draw_frame);\r\n      }, 1000 / fps);\r\n    }\r\n  }\r\n  return toggle_pause;\r\n}\r\n\r\nfunction setup() {\r\n  const canvas = document.getElementById(\"demo-canvas\");\r\n  if (!(canvas instanceof HTMLCanvasElement)) {\r\n    throw new Error(`expected canvas element, found ${typeof canvas}`);\r\n  }\r\n\r\n  const context = canvas.getContext(\"2d\", { alpha: false });\r\n  if (context === null) {\r\n    throw new Error(\"cannot get rendering context\");\r\n  }\r\n\r\n  const initial_state = new WorldState(44, 44);\r\n  const pattern_offset_x = 4;\r\n  const pattern_offset_y = 6;\r\n  const glider_gun_pattern = [\r\n    \"........................O\",\r\n    \"......................O.O\",\r\n    \"............OO......OO............OO\",\r\n    \"...........O...O....OO............OO\",\r\n    \"OO........O.....O...OO\",\r\n    \"OO........O...O.OO....O.O\",\r\n    \"..........O.....O.......O\",\r\n    \"...........O...O\",\r\n    \"............OO\",\r\n  ];\r\n  for (let y = 0; y < glider_gun_pattern.length; y += 1) {\r\n    const row = glider_gun_pattern[y];\r\n    for (let x = 0; x < row.length; x += 1) {\r\n      if (row[x] !== \".\") {\r\n        initial_state.set(x + pattern_offset_x, y + pattern_offset_y, true);\r\n      }\r\n    }\r\n  }\r\n\r\n  const toggle_pause = animate(context, initial_state, 30);\r\n\r\n  document\r\n    .getElementById(\"demo-toggle-pause-button\")\r\n    ?.addEventListener(\"click\", toggle_pause);\r\n}\r\n\r\nwindow.addEventListener(\"DOMContentLoaded\", setup);\r\n","export default function _typeof(obj) {\n    \"@swc/helpers - typeof\";\n    return obj && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n};\n"],"names":["$e5f9bd0c37e9914c$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","$47aa8b053c1a50b4$export$69c0232701838d91","width","height","instance","Constructor","TypeError","this","cells","Uint8Array","protoProps","staticProps","value","x","y","cell_index","alive","prototype","$d9308a90ac6ce5fc$var$draw_world_state","context","world_state","change_coords","cell_size","canvas","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","_value","rect_offset","rect_size","get","fillStyle","fillRect","err","return","x1","y1","$d9308a90ac6ce5fc$var$animate","initial_state","fps","current_state","future_state","paused","draw_frame","Error","nr_living_neighbors","set","push","$47aa8b053c1a50b4$export$35d233f3b2dbf62a","buffer","setTimeout","requestAnimationFrame","window","addEventListener","ref","obj","document","getElementById","HTMLCanvasElement","concat","constructor","getContext","alpha","glider_gun_pattern","row","toggle_pause"],"version":3,"file":"index.8777168f.js.map"}