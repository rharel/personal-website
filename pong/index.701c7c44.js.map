{"mappings":"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","sources":["node_modules/@swc/helpers/src/_create_class.js","node_modules/@swc/helpers/src/_define_property.js","node_modules/@swc/helpers/src/_object_spread.js","projects/pong/pong.ts","node_modules/@swc/helpers/src/_class_call_check.js","projects/pong/demo.ts"],"sourcesContent":["function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n","import defineProperty from './_define_property';\n\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","function clamp(value: number, min: number, max: number): number {\r\n  return value < min ? min : value > max ? max : value;\r\n}\r\n\r\nclass Vec2 {\r\n  constructor(public x: number, public y: number) {}\r\n\r\n  clamp(min: Vec2, max: Vec2): Vec2 {\r\n    return new Vec2(clamp(this.x, min.x, max.x), clamp(this.y, min.y, max.y));\r\n  }\r\n\r\n  distance_squared_to(other: Vec2): number {\r\n    return (\r\n      (this.x - other.x) * (this.x - other.x) +\r\n      (this.y - other.y) * (this.y - other.y)\r\n    );\r\n  }\r\n\r\n  magnitude(): number {\r\n    return Math.sqrt(this.distance_squared_to(new Vec2(0, 0)));\r\n  }\r\n\r\n  normalized(): Vec2 {\r\n    return new Vec2(this.x / this.magnitude(), this.y / this.magnitude());\r\n  }\r\n\r\n  plus(other: Vec2): Vec2 {\r\n    return new Vec2(this.x + other.x, this.y + other.y);\r\n  }\r\n\r\n  times(scalar: number): Vec2 {\r\n    return new Vec2(this.x * scalar, this.y * scalar);\r\n  }\r\n}\r\n\r\nexport type GameOptions = {\r\n  ball_radius: number;\r\n  ball_initial_speed: number;\r\n  ball_max_bounce_angle: number;\r\n  paddle_width: number;\r\n  paddle_height: number;\r\n  ai_movement_speed: number;\r\n};\r\n\r\n// The table is a square with size 2 centered at (0, 0).\r\nexport type GameState = GameOptions & {\r\n  ball_position: Vec2;\r\n  ball_velocity: Vec2;\r\n  player_paddle_x: number;\r\n  ai_paddle_x: number;\r\n};\r\n\r\nexport function new_game_state(options: GameOptions): GameState {\r\n  return {\r\n    ball_position: new Vec2(0, 0),\r\n    ball_velocity: new Vec2(0, options.ball_initial_speed),\r\n    player_paddle_x: 0,\r\n    ai_paddle_x: 0,\r\n    ...options,\r\n  };\r\n}\r\n\r\nexport function next_game_state(\r\n  previous_state: GameState,\r\n  elapsed_time: number\r\n): GameState {\r\n  if (game_ended(previous_state)) {\r\n    return previous_state;\r\n  }\r\n\r\n  const {\r\n    ball_radius,\r\n    ball_max_bounce_angle,\r\n    paddle_width,\r\n    paddle_height,\r\n    ai_movement_speed,\r\n  } = previous_state;\r\n  let ball_state = {\r\n    position: previous_state.ball_position.plus(\r\n      previous_state.ball_velocity.times(elapsed_time)\r\n    ),\r\n    velocity: previous_state.ball_velocity,\r\n  };\r\n  ball_state = handle_ball_collision_with_paddle(\r\n    ball_radius,\r\n    ball_max_bounce_angle,\r\n    ball_state.position,\r\n    ball_state.velocity,\r\n    previous_state.player_paddle_x,\r\n    1 - previous_state.paddle_height * 0.5,\r\n    paddle_width,\r\n    paddle_height\r\n  );\r\n  ball_state = handle_ball_collision_with_paddle(\r\n    ball_radius,\r\n    ball_max_bounce_angle,\r\n    ball_state.position,\r\n    ball_state.velocity,\r\n    previous_state.ai_paddle_x,\r\n    -1 + previous_state.paddle_height * 0.5,\r\n    paddle_width,\r\n    paddle_height\r\n  );\r\n  ball_state = handle_ball_collision_with_walls(\r\n    ball_radius,\r\n    ball_state.position,\r\n    ball_state.velocity\r\n  );\r\n\r\n  return {\r\n    ...previous_state,\r\n    ball_position: ball_state.position,\r\n    ball_velocity: ball_state.velocity,\r\n    ai_paddle_x:\r\n      previous_state.ai_paddle_x +\r\n      elapsed_time *\r\n        ai_paddle_velocity(\r\n          ball_radius,\r\n          ball_max_bounce_angle,\r\n          ball_state.position,\r\n          ball_state.velocity,\r\n          previous_state.player_paddle_x,\r\n          previous_state.ai_paddle_x,\r\n          paddle_width,\r\n          paddle_height,\r\n          ai_movement_speed\r\n        ),\r\n  };\r\n}\r\n\r\nexport function game_ended(state: GameState): boolean {\r\n  return winner(state) !== null;\r\n}\r\n\r\nexport function winner(state: GameState): \"player\" | \"ai\" | null {\r\n  return state.ball_position.y - state.ball_radius < -1\r\n    ? \"player\"\r\n    : state.ball_position.y + state.ball_radius > 1\r\n    ? \"ai\"\r\n    : null;\r\n}\r\n\r\ntype BallState = {\r\n  position: Vec2;\r\n  velocity: Vec2;\r\n};\r\n\r\nfunction handle_ball_collision_with_paddle(\r\n  ball_radius: number,\r\n  ball_max_bounce_radians: number,\r\n  ball_position: Vec2,\r\n  ball_velocity: Vec2,\r\n  paddle_x: number,\r\n  paddle_y: number,\r\n  paddle_width: number,\r\n  paddle_height: number\r\n): BallState {\r\n  const paddle_left = paddle_x - paddle_width * 0.5;\r\n  const paddle_right = paddle_x + paddle_width * 0.5;\r\n  const paddle_bottom = paddle_y - paddle_height * 0.5;\r\n  const paddle_top = paddle_y + paddle_height * 0.5;\r\n\r\n  const nearest_paddle_point = ball_position.clamp(\r\n    new Vec2(paddle_left, paddle_bottom),\r\n    new Vec2(paddle_right, paddle_top)\r\n  );\r\n  const collides =\r\n    ball_position.distance_squared_to(nearest_paddle_point) <\r\n    ball_radius * ball_radius;\r\n\r\n  if (!collides) {\r\n    return { position: ball_position, velocity: ball_velocity };\r\n  }\r\n\r\n  // When there is a collision, separate the ball from the paddle.\r\n\r\n  const separation_padding = 0.001;\r\n  const separation_y =\r\n    ball_velocity.y < 0\r\n      ? paddle_top + ball_radius + separation_padding\r\n      : paddle_bottom - ball_radius - separation_padding;\r\n\r\n  const separation_direction = ball_velocity.normalized();\r\n  separation_direction.y *= -1;\r\n\r\n  const separation_distance = Math.abs(\r\n    (ball_position.y - separation_y) / separation_direction.y\r\n  );\r\n  const new_ball_position = ball_position.plus(\r\n    separation_direction.times(separation_distance)\r\n  );\r\n\r\n  // Once the ball is separated, calculate its new velocity after it bounces.\r\n\r\n  const center_offset = new_ball_position.x - paddle_x;\r\n  const center_offset_normalized = center_offset / (0.5 * paddle_width);\r\n  const bounce_angle =\r\n    0.5 * Math.PI - center_offset_normalized * ball_max_bounce_radians;\r\n  const new_ball_velocity = new Vec2(\r\n    Math.cos(bounce_angle),\r\n    -Math.sign(ball_velocity.y) * Math.sin(bounce_angle)\r\n  ).times(ball_velocity.magnitude());\r\n\r\n  return {\r\n    position: new_ball_position,\r\n    velocity: new_ball_velocity,\r\n  };\r\n}\r\n\r\nfunction handle_ball_collision_with_walls(\r\n  radius: number,\r\n  position: Vec2,\r\n  velocity: Vec2\r\n): BallState {\r\n  if (position.x - radius < -1) {\r\n    return {\r\n      position: new Vec2(-1 + radius, position.y),\r\n      velocity: new Vec2(velocity.x * -1, velocity.y),\r\n    };\r\n  } else if (position.x + radius > 1) {\r\n    return {\r\n      position: new Vec2(1 - radius, position.y),\r\n      velocity: new Vec2(velocity.x * -1, velocity.y),\r\n    };\r\n  } else {\r\n    return { position, velocity };\r\n  }\r\n}\r\n\r\nfunction ai_paddle_velocity(\r\n  ball_radius: number,\r\n  ball_max_bounce_angle: number,\r\n  ball_position: Vec2,\r\n  ball_velocity: Vec2,\r\n  player_paddle_x: number,\r\n  ai_paddle_x: number,\r\n  paddle_width: number,\r\n  paddle_height: number,\r\n  max_velocity: number\r\n): number {\r\n  if (ball_velocity.y >= 0) {\r\n    return 0;\r\n  }\r\n\r\n  const goal_y = Math.sign(ball_velocity.y);\r\n  const wall_ahead_x = Math.sign(ball_velocity.x);\r\n  const wall_behind_x = -wall_ahead_x;\r\n\r\n  const time_to_intercept =\r\n    (Math.abs(goal_y - ball_position.y) - paddle_height - ball_radius) /\r\n    Math.abs(ball_velocity.y);\r\n\r\n  const horizontal_movement = Math.abs(ball_velocity.x * time_to_intercept);\r\n  const distance_to_wall_ahead =\r\n    Math.abs(wall_ahead_x - ball_position.x) - ball_radius;\r\n\r\n  let intercept_x;\r\n  if (horizontal_movement < distance_to_wall_ahead) {\r\n    intercept_x = ball_position.x + ball_velocity.x * time_to_intercept;\r\n  } else {\r\n    const padded_edge_size = 2 - 2 * ball_radius;\r\n    const nr_wall_bounces = Math.floor(\r\n      (horizontal_movement - distance_to_wall_ahead) / padded_edge_size\r\n    );\r\n    const final_stretch_distance =\r\n      (horizontal_movement - distance_to_wall_ahead) % padded_edge_size;\r\n    intercept_x =\r\n      nr_wall_bounces % 2 == 0\r\n        ? wall_ahead_x - Math.sign(ball_velocity.x) * final_stretch_distance\r\n        : wall_behind_x + Math.sign(ball_velocity.x) * final_stretch_distance;\r\n  }\r\n\r\n  const target_serve_x = -Math.sign(player_paddle_x) * (1 - ball_radius);\r\n  const target_bounce_angle = Math.atan((target_serve_x - intercept_x) / 2);\r\n  const center_offset_normalized = target_bounce_angle / ball_max_bounce_angle;\r\n  const center_offset =\r\n    clamp(center_offset_normalized, -1, 1) * 0.5 * paddle_width;\r\n  const target_x = intercept_x - center_offset;\r\n  const target_dx = target_x - ai_paddle_x;\r\n\r\n  return clamp(target_dx, -max_velocity, max_velocity);\r\n}\r\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import {\r\n  GameState,\r\n  game_ended,\r\n  new_game_state,\r\n  next_game_state as next_game_state,\r\n  winner,\r\n} from \"./pong\";\r\n\r\ntype RenderOptions = {\r\n  background_color: string;\r\n  foreground_color: string;\r\n};\r\n\r\nfunction draw_game_state(\r\n  game_state: GameState,\r\n  context: CanvasRenderingContext2D,\r\n  options: RenderOptions\r\n) {\r\n  context.fillStyle = options.background_color;\r\n  context.fillRect(0, 0, context.canvas.width, context.canvas.height);\r\n\r\n  context.save();\r\n\r\n  context.scale(context.canvas.width / 2, context.canvas.height / 2);\r\n  context.translate(1, 1);\r\n\r\n  context.fillStyle = options.foreground_color;\r\n  context.beginPath();\r\n  context.rect(\r\n    game_state.player_paddle_x - game_state.paddle_width * 0.5,\r\n    1 - game_state.paddle_height,\r\n    game_state.paddle_width,\r\n    game_state.paddle_height\r\n  );\r\n  context.rect(\r\n    game_state.ai_paddle_x - game_state.paddle_width * 0.5,\r\n    -1,\r\n    game_state.paddle_width,\r\n    game_state.paddle_height\r\n  );\r\n  context.arc(\r\n    game_state.ball_position.x,\r\n    game_state.ball_position.y,\r\n    game_state.ball_radius,\r\n    0,\r\n    2 * Math.PI\r\n  );\r\n  context.fill();\r\n\r\n  context.restore();\r\n}\r\n\r\nfunction setup() {\r\n  const canvas = document.getElementById(\"demo-canvas\");\r\n  if (!(canvas instanceof HTMLCanvasElement)) {\r\n    throw new Error(\"cannot find canvas\");\r\n  }\r\n\r\n  const render_context = canvas.getContext(\"2d\", { alpha: false });\r\n  if (render_context === null) {\r\n    throw new Error(\"cannot get context\");\r\n  }\r\n\r\n  const game_options = {\r\n    ball_radius: 0.05,\r\n    ball_initial_speed: 1.6,\r\n    ball_max_bounce_angle: 0.3 * Math.PI,\r\n    paddle_width: 0.4,\r\n    paddle_height: 0.05,\r\n    ai_movement_speed: 1,\r\n  };\r\n  const render_options = {\r\n    background_color: \"white\",\r\n    foreground_color: \"#ed12a5\",\r\n  };\r\n\r\n  let game_state = new_game_state(game_options);\r\n  let last_frame_time_ms: number | null = null;\r\n\r\n  canvas.addEventListener(\"mousemove\", (event) => {\r\n    game_state.player_paddle_x = -1 + (event.offsetX / canvas.clientWidth) * 2;\r\n  });\r\n\r\n  const advance_game = () => {\r\n    const this_frame_time_ms = performance.now();\r\n    const elapsed_seconds = last_frame_time_ms\r\n      ? (this_frame_time_ms - last_frame_time_ms) / 1000\r\n      : 0;\r\n    last_frame_time_ms = this_frame_time_ms;\r\n    game_state = next_game_state(game_state, elapsed_seconds);\r\n    draw_game_state(game_state, render_context, render_options);\r\n    if (game_ended(game_state)) {\r\n      if (\r\n        winner(game_state) === \"player\" &&\r\n        game_options.ball_initial_speed < 3\r\n      ) {\r\n        game_options.ball_initial_speed += 0.2;\r\n        game_options.ai_movement_speed += 0.1;\r\n      }\r\n      game_state = new_game_state(game_options);\r\n      last_frame_time_ms = null;\r\n      setTimeout(() => requestAnimationFrame(advance_game), 1000);\r\n    } else {\r\n      requestAnimationFrame(advance_game);\r\n    }\r\n  };\r\n  advance_game();\r\n}\r\n\r\nwindow.addEventListener(\"DOMContentLoaded\", setup);\r\n"],"names":["$e5f9bd0c37e9914c$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","$7dbcf7086e8d10dc$export$2e2bcd8739ae039","obj","value","$d48ddae4a704ec47$export$2e2bcd8739ae039","arguments","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","$ddecbe79c4a1c6c0$var$clamp","min","max","$ddecbe79c4a1c6c0$var$Vec2","x","y","instance","Constructor","TypeError","protoProps","staticProps","this","other","Math","sqrt","distance_squared_to","magnitude","scalar","prototype","$ddecbe79c4a1c6c0$export$51479cab8e743335","options","ball_position","ball_velocity","ball_initial_speed","player_paddle_x","ai_paddle_x","$ddecbe79c4a1c6c0$export$4addf01929e3c8","previous_state","elapsed_time","$ddecbe79c4a1c6c0$export$88a01a05ddd76820","radius","position","velocity","ball_radius","ball_max_bounce_angle","paddle_width","paddle_height","ai_movement_speed","ball_state","plus","times","$ddecbe79c4a1c6c0$var$handle_ball_collision_with_paddle","$ddecbe79c4a1c6c0$var$ai_paddle_velocity","state","$ddecbe79c4a1c6c0$export$b14ee659ac727b39","ball_max_bounce_radians","paddle_x","paddle_y","paddle_left","paddle_right","paddle_bottom","paddle_top","nearest_paddle_point","clamp","separation_y","separation_direction","normalized","separation_distance","abs","new_ball_position","center_offset_normalized","bounce_angle","PI","cos","sign","sin","max_velocity","intercept_x","goal_y","wall_ahead_x","wall_behind_x","time_to_intercept","horizontal_movement","distance_to_wall_ahead","padded_edge_size","final_stretch_distance","floor","target_serve_x","center_offset","atan","window","addEventListener","canvas","document","getElementById","HTMLCanvasElement","Error","render_context","getContext","alpha","game_options","render_options","background_color","foreground_color","game_state","last_frame_time_ms","event","offsetX","clientWidth","advance_game","this_frame_time_ms","performance","now","elapsed_seconds","context","fillStyle","fillRect","width","height","save","scale","translate","beginPath","rect","arc","fill","restore","$12d16ea33105c5cc$var$draw_game_state","setTimeout","requestAnimationFrame"],"version":3,"file":"index.701c7c44.js.map"}